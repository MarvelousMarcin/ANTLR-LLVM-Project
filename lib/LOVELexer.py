# Generated from LOVE.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,18,111,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,1,0,1,0,1,0,1,0,
        1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,6,1,7,
        1,7,1,7,1,7,1,7,1,8,4,8,63,8,8,11,8,12,8,64,1,9,4,9,68,8,9,11,9,
        12,9,69,1,9,1,9,4,9,74,8,9,11,9,12,9,75,1,10,4,10,79,8,10,11,10,
        12,10,80,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,5,15,
        93,8,15,10,15,12,15,96,9,15,1,15,1,15,1,16,3,16,101,8,16,1,16,1,
        16,1,17,4,17,106,8,17,11,17,12,17,107,1,17,1,17,0,0,18,1,1,3,2,5,
        3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,
        31,16,33,17,35,18,1,0,3,2,0,65,90,97,122,2,0,34,34,92,92,2,0,9,9,
        32,32,117,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,
        0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,
        0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,
        0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,1,37,1,0,0,0,3,42,1,
        0,0,0,5,44,1,0,0,0,7,46,1,0,0,0,9,48,1,0,0,0,11,50,1,0,0,0,13,52,
        1,0,0,0,15,56,1,0,0,0,17,62,1,0,0,0,19,67,1,0,0,0,21,78,1,0,0,0,
        23,82,1,0,0,0,25,84,1,0,0,0,27,86,1,0,0,0,29,88,1,0,0,0,31,90,1,
        0,0,0,33,100,1,0,0,0,35,105,1,0,0,0,37,38,5,76,0,0,38,39,5,79,0,
        0,39,40,5,86,0,0,40,41,5,69,0,0,41,2,1,0,0,0,42,43,5,40,0,0,43,4,
        1,0,0,0,44,45,5,41,0,0,45,6,1,0,0,0,46,47,5,123,0,0,47,8,1,0,0,0,
        48,49,5,44,0,0,49,10,1,0,0,0,50,51,5,125,0,0,51,12,1,0,0,0,52,53,
        5,103,0,0,53,54,5,101,0,0,54,55,5,116,0,0,55,14,1,0,0,0,56,57,5,
        115,0,0,57,58,5,104,0,0,58,59,5,111,0,0,59,60,5,119,0,0,60,16,1,
        0,0,0,61,63,7,0,0,0,62,61,1,0,0,0,63,64,1,0,0,0,64,62,1,0,0,0,64,
        65,1,0,0,0,65,18,1,0,0,0,66,68,2,48,57,0,67,66,1,0,0,0,68,69,1,0,
        0,0,69,67,1,0,0,0,69,70,1,0,0,0,70,71,1,0,0,0,71,73,5,46,0,0,72,
        74,2,48,57,0,73,72,1,0,0,0,74,75,1,0,0,0,75,73,1,0,0,0,75,76,1,0,
        0,0,76,20,1,0,0,0,77,79,2,48,57,0,78,77,1,0,0,0,79,80,1,0,0,0,80,
        78,1,0,0,0,80,81,1,0,0,0,81,22,1,0,0,0,82,83,5,43,0,0,83,24,1,0,
        0,0,84,85,5,47,0,0,85,26,1,0,0,0,86,87,5,45,0,0,87,28,1,0,0,0,88,
        89,5,42,0,0,89,30,1,0,0,0,90,94,5,34,0,0,91,93,8,1,0,0,92,91,1,0,
        0,0,93,96,1,0,0,0,94,92,1,0,0,0,94,95,1,0,0,0,95,97,1,0,0,0,96,94,
        1,0,0,0,97,98,5,34,0,0,98,32,1,0,0,0,99,101,5,13,0,0,100,99,1,0,
        0,0,100,101,1,0,0,0,101,102,1,0,0,0,102,103,5,10,0,0,103,34,1,0,
        0,0,104,106,7,2,0,0,105,104,1,0,0,0,106,107,1,0,0,0,107,105,1,0,
        0,0,107,108,1,0,0,0,108,109,1,0,0,0,109,110,6,17,0,0,110,36,1,0,
        0,0,8,0,64,69,75,80,94,100,107,1,6,0,0
    ]

class LOVELexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    GET = 7
    SHOW = 8
    ID = 9
    REAL = 10
    INT = 11
    ADD = 12
    DIV = 13
    MINUS = 14
    MULT = 15
    STRING = 16
    NEWLINE = 17
    WS = 18

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'LOVE'", "'('", "')'", "'{'", "','", "'}'", "'get'", "'show'", 
            "'+'", "'/'", "'-'", "'*'" ]

    symbolicNames = [ "<INVALID>",
            "GET", "SHOW", "ID", "REAL", "INT", "ADD", "DIV", "MINUS", "MULT", 
            "STRING", "NEWLINE", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "GET", 
                  "SHOW", "ID", "REAL", "INT", "ADD", "DIV", "MINUS", "MULT", 
                  "STRING", "NEWLINE", "WS" ]

    grammarFileName = "LOVE.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


